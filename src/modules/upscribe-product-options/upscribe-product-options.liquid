<!-- Upscribe -->
{% if product.metafields.sf_upscribe.enable_subscription %}
{% comment %} Reset snippet variables{% endcomment %}
{% assign upscribe_include_vue_cdn_in_snippet = true %}
{% assign upscribe_component_uid = false %}
{% assign upscribe_keep_component_in_sync = false %}
{% assign upscribe_regular_price_query_selector = false %}
{% assign upscribe_sale_price_query_selector = false %}
{% comment %}
Snippet variables that can be passed

upscribe_exclude_vue_cdn_in_snippet = Whether or not to load the vue.js script from CDN
(excluded if loaded globally, defaults to true)
{% endcomment %}

{% comment %} Used in case there are multiple Upscribe blocks loaded per page {% endcomment %}
{% unless upscribe_component_uid %}
{% assign upscribe_component_uid = product.id %}
{% endunless %}

{% if upscribe_include_vue_cdn_in_snippet != false %}
{% assign upscribe_include_vue_cdn_in_snippet = true %}
{% endif %}


{% if upscribe_keep_component_in_sync != false %}
{% assign upscribe_keep_component_in_sync = true %}
{% endif %}

{% comment %} Vue for Upscribe logic include unless specificied not to from snippet include
{% if upscribe_include_vue_cdn_in_snippet %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.js"></script>
{% endif %}
{% endcomment %}

<section :product='{{product | json}}' :shop='{{shop.metafields | json}}' :product-id="{{product.id}}" v-if="product && componentMounted"
  id="upscribe-subscription-product" class="cu-upscribe">
  <div class="cu-upscribe__inner" :class="{'cu-upscribe__inner--hidden': !activeVariantIsApplicableVariant}"
    :upscribe-sale-price-query-selector="{{upscribe_sale_price_query_selector}}"
    :upscribe-regular-price-query-selector="{{upscribe_regular_price_query_selector}}"
    :upscribe-keep_component-in-sync="{{upscribe_keep_component_in_sync}}" data-module="upscribe-product-options">

    <div class="cu-subscription-inputs" v-if="subscriptionSelected || isOnetimeSubscription">
      <input v-if="finalSubscriptionProperty" type="hidden" :value="finalSubscriptionProperty"
        name="properties[Subscription]">

      <input v-if="subscriptionProductTitleDisplay" type="hidden" :value="subscriptionProductTitleDisplay"
        name="properties[Subscription Product Title]">

      <input v-if="subscriptionAmount" type="hidden" :value="subscriptionAmount" name="properties[Subscription Amount]">

      <input v-if="activeDiscountAmount" type="hidden" :value="activeDiscountAmount" name="properties[Discount Amount]">

      <input v-if="chargeLimit" type="hidden" :value="chargeLimit" name="properties[Charge Limit]">

      <input v-if="recurringDiscountAmount" type="hidden" :value="recurringDiscountAmount"
        name="properties[Recurring Discount Amount]">

      <input v-if="recurringDiscountAfterOrder" type="hidden" :value="recurringDiscountAfterOrder"
        name="properties[Recurring Discount After Order]">

      <input v-if="intervalFrequency" type="hidden" :value="intervalFrequency" name="properties[Interval Frequency]">

      <input v-if="intervalUnit" type="hidden" :value="intervalUnit" name="properties[Interval Unit]">

    </div>

    <div class="cu-productTypeSelect js-upscribe-product-type" :data-upscribe-product-type="productPurchaseType">
      <div class="cu-productTypeSelect__itemWrap">
        <label class="cu-productTypeSelect__itemLabel" for="onetime-{{upscribe_component_uid}}">
          <input type="radio" id="onetime-{{upscribe_component_uid}}" value="onetime" v-model="productPurchaseType">
          <span class="cu-productTypeSelect__itemText">${ oneTimeMessage || 'One-time Order' }</span>
        </label>
      </div>

      <div class="cu-productTypeSelect__itemLabel">
        <label class="cu-productTypeSelect__itemWrap" for="subscription-{{upscribe_component_uid}}">
          <input type="radio" id="subscription-{{upscribe_component_uid}}" value="subscription"
            v-model="productPurchaseType">
          <span class="cu-productTypeSelect__itemText">${ subscriptionMessage || 'Subscribe & Save' } ${
            activeDiscountAmount }</span>
        </label>
      </div>
    </div>

    <div v-if="selectFrequencyOptions && subscriptionSelected" class="cu-options cu-options--frequency">
      <span class="cu-optionsTitle">Frequency (${ intervalUnit }s)</span>

      <div class="cu-optionsGrid">
        <v-option v-for="(option, index) in selectFrequencyOptions" :select-frequency-options="selectFrequencyOptions"
          :key="option.frequency" :index="index" :option="option" :selected-index="selectedFrequencyIndex"
          class="cu-option" v-on:click-option="setFrequency"></v-option>
      </div>
    </div>
  </div>
</section>
{% endif %}
